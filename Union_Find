class DSU{
    public:
        vector<long long int> parent,size;
        DSU(int n){ 
            parent.resize(n+1);
            size.resize(n+1);
            for(int i=0;i<=n;i++){
                parent[i]=i;
                size[i]=i;
            }
        }
        int find(int v){
            if(v==parent[v]){
                return v;
            }
            return parent[v]=find(parent[v]);
        }
        void Union(int a,int b){
            a=find(a);
            b=find(b);
            if(a!=b){
                if(size[a]<size[b]) swap(a,b);
                parent[b]=a;
                size[a]+=size[b]+0LL;
            }
        }
};
